{"home":{"content":"# Lecture 1: HTML Markup + Intro to CSS\n---\n\nWelcome to Lecture 1 @GA. Here's a brief class breakdown.\n\n#### Learning Objectives\n---\n1. Understanding how to use common HTML tags and their purpose in the larger document flow\n2. Understanding the role of relative and absolute URLs for loading resources to our docs\n3. Brief introduction to CSS: the querying language of HTML\n\n#### Rundown\n---\n#### [Warm Up: Git Review](#git-review)\n#### [Semantic HTML](#semantic-html)\n#### [Intro to CSS](#intro-to-css)\n","idx":0},"title":{"content":"Lecture 1: HTML Markup + Intro to CSS","idx":1},"desc":{"content":"A closer look @HTML + a quick introduction to CSS\n","idx":2},"git-review":{"content":"# Git Review\n---\n\nLet's get started with a quick exercise. \n\n#### Note to self\n---\n\nDiscuss the impact of calling a webpage **`resume.html`** and what effect that has on deploying through GitBot.\n\n#### Exercise 1: GitHub Review\n---\nBuild me a website with some content (doesn't matter what kind of content, just some simple HTML stuff, can be about anything).\n\nThen, **create a new GitHub repo**, **commit your website content**, and finally **deploy the site via [GitBot](http://gitbot.co).**\n\n**QUESTION**: What should you name this HTML file? Why is it important?\n\n#### Exercise 2: Adding a second page.\n---\nNow go ahead and add a second page to your web project.\n\nThen, **commit this new page** and **deploy once more to [GitBot](http://gitbot.co)**.\n\n**QUESTION**: How can you access this new page in the browser?\n\n\n\n","idx":3},"semantic-html":{"content":"# Semantic HTML\n---\n\nHTML5 introduces a plethora of new tags. These tags are mainly used to dictate structure and meaning to the **information** that is presented on our website.\n\n### EXERCISES\n---\nHere are the main problems that we will be working towards in this section of the class.\n#### Problem 1:\n---\n\nTake the resume that you built for homework and redefine the content using the **semantic** html elements we will be learning about today.\n\nIf you did not do the homework or just wish to use something else, feel free to use my **[resume](http://resume.taqquikarim.com)**.\n\n#### Problem 2:\n---\nLet's use the **semantic** html tags we learned about to define the markup for the page.\n\n**[Starter code on GitHub](https://github.com/FEWDMaterials/WendyBite_BEM)**: download this repo then create a new repo on GitHub to for this project.\n\nAlso for now, don't worry about the styles that we will inevitably need to complete this assignment.\n<div>\n<img src=\"https://raw.githubusercontent.com/FEWDMaterials/WendyBite_BEM/master/assignmentMaterials/WendyBite_AboutMe.png\" style=\"width: 100%; height: auto;\">\n</div>\n\n\n\n#### Properly marking up your page\n---\nDon't worry about what the `id` attributes mean for now.\n\n![site structure](http://i.stack.imgur.com/L4qMt.png)\n\n#### Sections VS Articles\n---\nUse **sections** when you are outlining **chapters in a book**. \n\n**EXAMPLE**: A dessert cookbook could have chapters on **cake** recipes vs **pie** recipes.\n\nUse **articles** when you are defining say **poems** in a volume.\n\n**EXAMPLE**: In our dessert cookbook, **each recipe** in the **cake** section would be an **article**.\n\nYou can nest **articles** into **sections** and **sections** into **articles**.\n\n**EXAMPLE**\n\nArticles can go inside section tags\n```html\n<section>\n    <article>\n      <!-- first blog post -->\n    </article>\n    \n    <!-- .... more articles here ... -->\n</section>\n```\n\nSections can also go inside article tags\n```html\n<article>\n  <section>\n     <!-- introduction -->\n  </section>\n\n  <section>\n     <!-- content -->\n  </section>\n\n  <section>\n     <!-- summary, etc -->\n  </section>\n</article>\n```\n\n**THIS STUFF IS PARTLY SUBJECTIVE; THERE REALLY IS NO ONE RIGHT ANSWER**. As long as we are consistent and don't violate the laws of HTML (ie: we don't put a **p** tag inside a **a** tag, or something like that). \n\n#### Headers, Footers, Nav, Main\n---\n\n* Use headers/foorters/navs as **often as you'd like** within each section/article/aside\n* Each sectioning element (section/article/aside) can have it's own `h1` tag (some validators say this is not recommended but this is still technically allowed)\n* I usually put `nav` tags inside the `header` or `footer` pages\n* **MAIN** can only be used once per page. Typically, it is used to define what the main content block of the page is. Don't have to use it though. \n* Essentially, **the blue in the previous image could be wrapped in a main tag**\n\n\n#### Semantic HTML5 Tags\n---\n\nHere are some of the main tags that are supported.\n\n**SECTION**: Represents a generic document or application section.\n\n**HEADER**: Represents a group of introductory or navigational aids..\n\n**FOOTER**: Represents a footer for a section and can contain information about the author, copyright information, et cetera.\n\n**NAV**: Represents a section of the document intended for navigation.\n\n**MAIN**: Defines the main content of a document.\n\n**ARTICLE**: Represents an independent piece of content of a document, such as a blog entry or newspaper article\n\n**ASIDE**: Represents a piece of content that is only slightly related to the rest of the page.\n\n#### More info on sections vs articles\n---\n\n**SECTION**: Used to either group different articles into different purposes or subjects, or to define the different sections of a single article.\n\n**ARTICLE**: `<article>` is related to `<section>`, but is distinctly different. Whereas `<section>` is for grouping distinct sections of content or functionality, `<article>` is for containing related individual standalone pieces of content, such as individual blog posts, videos, images or news items. \n\n\n\n\n","idx":4},"intro-to-css":{"content":"# Intro to CSS\n---\n","idx":5},"__list__":["home","title","desc","git-review","semantic-html","intro-to-css"]}